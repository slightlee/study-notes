name: Deploy to Aliyun

on:
  push:
    branches:
      - main
      - release/*

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Aliyun Container Registry
        run: |
          echo ${{ secrets.ALIYUN_PASSWORD }} | docker login -u ${{ secrets.ALIYUN_USERNAME }} --password-stdin ${{ secrets.ALIYUN_REGISTRY }}

      - name: Build and push Docker image
        run: |
          TAG_NAME=${{ github.ref }}
          TAG_NAME=${TAG_NAME##*/}
          SHORT_SHA=$(echo ${{ github.sha }} | head -c 7)
          IMAGE_NAME=${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACES }}/${{ secrets.ALIYUN_REPO }}

          # Build and push with unique tag
          docker build -t $IMAGE_NAME:${TAG_NAME}-${SHORT_SHA} .
          docker push $IMAGE_NAME:${TAG_NAME}-${SHORT_SHA}

          # passing variables
          echo "TAG_NAME: ${TAG_NAME}"
          echo "IMAGE_NAME: ${IMAGE_NAME}"
          echo "SHORT_SHA: ${SHORT_SHA}"

          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
      
        # https://help.aliyun.com/zh/cli/configure-credentials?spm=a2c4g.11186623.0.0.37714b90tff8nD
      # 个人版没有实例ID，接口请求不了 见 https://api.aliyun.com/api/cr/2018-12-01/GetRepository?params={%22InstanceId%22:%22-%22}&tab=DEBUG
      # - name: Install aliyun CLI
      #   run: |
      #     curl -Lo aliyun.tgz https://aliyuncli.alicdn.com/aliyun-cli-linux-latest-amd64.tgz
      #     tar -xvzf aliyun.tgz
      #     mv aliyun /usr/local/bin/

      # - name: Setting aliyun CLI
      #   run: |
      #     aliyun configure set --profile akProfile --mode AK --region ${{ secrets.ALIYUN_REGION }} --access-key-id ${{ secrets.ALIYUN_ACCESS_KEY_ID }} --access-key-secret ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}

      # - name: Delete older Docker version
      #   run: |
      #     IMAGE_NAME=${{ env.IMAGE_NAME }}
      #     TAG_NAME=${{ env.TAG_NAME }}
      #     SHORT_SHA=${{ env.SHORT_SHA }}
      #     echo "Deleting old images for $IMAGE_NAME with tag $TAG_NAME"
          
      #     # List all tags
      #     TAGS=$(aliyun cr GET /repos/${{ secrets.ALIYUN_NAMESPACE }}/${{ secrets.ALIYUN_REPO }}/tags --output json | jq -r '.tags[].tag')
      #     echo "Found tags: $TAGS"
          
      #     # Delete tags except the current one
      #     echo "$TAGS" | grep "^${TAG_NAME}-" | while read tag; do
      #       if [ "$tag" != "${TAG_NAME}-${SHORT_SHA}" ]; then
      #         echo "Deleting tag: $tag"
      #         aliyun cr DELETE /repos/${{ secrets.ALIYUN_NAMESPACE }}/${{ secrets.ALIYUN_REPO }}/tags/$tag
      #       fi
      #     done

      - name: Notify server to deploy
        run: |
          IMAGE_TAG="${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}-${{ env.SHORT_SHA }}"
          echo "IMAGE_TAG: ${IMAGE_TAG}"
          curl -X POST ${{ secrets.SERVER_WEBHOOK_URL }} \
            -H 'Content-Type: application/json' \
            -d '{"image_name": "'${IMAGE_TAG}'"}'
